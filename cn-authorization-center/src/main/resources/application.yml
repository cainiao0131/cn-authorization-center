server:
  port: 9000

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:postgresql://192.168.3.24:31960/cn-authorization-center
    username: postgres
    password: G00dl^ck
    driver-class-name: org.postgresql.Driver
    druid:
      db-type: mysql
      filters: stat,wall,log4j2
      initial-size: 10
      min-idle:  1
      max-active:  50
      max-wait:  60000
      time-between-eviction-runs-millis:  60000
      min-evictable-idle-time-millis:  300000
      validation-query:  SELECT 'ezalor'
      test-while-idle:  true
      test-on-borrow:  true
      test-on-return:  false
      pool-prepared-statements:  true
      max-pool-prepared-statement-per-connection-size: 20
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl
    auto-mapping-behavior: full
    auto-mapping-unknown-column-behavior: none
  global-config:
    banner: false
    db-config:
      update-strategy: NOT_NULL
      id-type: auto
      property-format: "`%s`"

cn:
  oauth2:
    server:
      url: https://cas.cainiao.top/
  gitea:
    server: https://gitee.com/
    client-id: abc
    client-secret: abc
    redirect-uri: abc
    login-success: abc
    su-token: abc

springdoc:
  customer:
    theme: feeling-blue
    title:  授权中心
    url: https://abc
    config-url: /v3/api-docs/swagger-config
  server:
    url: http://abc
    description: ${springdoc.customer.title}
  info:
    title: ${springdoc.customer.title}
    description: ${springdoc.customer.title} API接口文档
    version: 1.0.0
    terms-of-service: https://abc
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0
    contact:
      email: wdhlzd@163.com
      name: ${springdoc.customer.title}
      url: ${springdoc.customer.url}
  swagger-ui:
    enabled: true
  group-configs:
    - group: default
      packages-to-scan:
        - org.cainiao.authorization.controller
    - group: open
      packages-to-scan:
        - org.cainiao.authorization.controller.open
    - group: platform
      packages-to-scan:
        - org.cainiao.authorization.controller.platform
  api-docs:
    enabled: true
    groups:
      enabled: true
